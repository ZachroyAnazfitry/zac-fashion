#
# STAGE 1: Build PHP dependencies with Composer
#
FROM composer:2 as vendor

WORKDIR /app

# Copy only the files needed to install dependencies
COPY database/ database/
COPY composer.json composer.json
COPY composer.lock composer.lock

# Install production dependencies
RUN composer install \
    --ignore-platform-reqs \
    --no-interaction \
    --no-plugins \
    --no-scripts \
    --prefer-dist \
    --no-dev


#
# STAGE 2: Build Node.js frontend assets
#
FROM node:18-alpine as frontend

WORKDIR /app

# Copy only the files needed to build assets
COPY package.json package.json
COPY package-lock.json package-lock.json
COPY vite.config.js vite.config.js
COPY tailwind.config.js tailwind.config.js
COPY postcss.config.js postcss.config.js
COPY resources/ resources/

# Install dependencies and build assets
RUN npm ci
RUN npm run build


#
# STAGE 3: Create the final, optimized production image
#
FROM php:8.2-fpm-alpine

WORKDIR /var/www/html

# Install required PHP extensions for Laravel
RUN apk add --no-cache \
        libpng-dev \
        libzip-dev \
        jpeg-dev \
        freetype-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
        gd \
        zip \
        pdo_mysql \
        exif \
        pcntl

# Copy the web server configuration (Nginx)
# We will need to create this file next
COPY .docker/nginx.conf /etc/nginx/nginx.conf
COPY .docker/start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# Copy application code from the current directory
COPY . .

# Copy vendor dependencies from the 'vendor' stage
COPY --from=vendor /app/vendor/ ./vendor/

# Copy frontend assets from the 'frontend' stage
COPY --from=frontend /app/public/build ./public/build/

# Set correct permissions for storage and bootstrap cache
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache
RUN chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# Expose port 80 for the web server
EXPOSE 80

# The command to start the web server and PHP-FPM
CMD ["/usr/local/bin/start.sh"]
